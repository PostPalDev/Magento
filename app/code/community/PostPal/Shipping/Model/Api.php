<?php/** * @author Jana Vassiljeva <jana@artmarka.com> */class PostPal_Shipping_Model_Api{    public $location, $key, $warehouseCode;    public function __construct()    {        $this->location = Mage::getStoreConfig('carriers/postpal_shipping/api_url');        $this->key = Mage::getStoreConfig('carriers/postpal_shipping/api_key');        $this->warehouseCode = Mage::getStoreConfig('carriers/postpal_shipping/warehouse_code');    }    /**     * Delivery arrival estimation     * This request will provide information about the estimated delivery arrival to the destination.     * This estimation should be displayed to the enduser before the order is placed.     *     * URL: /estimation     * Type: POST     *     * Parameters:     * token Required. Has to ba valid authentication token.     * warehouse Required. Has to be valid warehouse code.     *     * Response     * Response will contain HTTP code and content in JSON format     *     * Warehouses with open times defined     * HTTP Code: 200 OK     * JSON     * {     *      "status": true,     *      "estimate": "2015-10-27 00:34:00"     * }     * Warehouses without any upcoming opened times     * HTTP Code: 200 OK     * JSON     * {     *      "status": false     * }     * Authentication failed     * HTTP Code: 401 Unauthorized     */    public function getDeliveryArrivalEstimation()    {        $data = array(            'token' => $this->key,            'warehouse' => $this->warehouseCode        );        $url = $this->location . '/estimation';        return $this->sendRequest($url, $data);    }    /**     * Validate before placing a new order     * This request is for validating order details, before placing a new delivery order to PostPal     *     * URL: /orders/new/warehouse/validate     * Type: POST     *     * Parameters:     * token - Required.  Has to ba valid authentication token Authentication token     * warehouse - Required. Warehouse code     * destinationFirstName  - Required. (if destinationFullName is empty). Max 225 characters. Package receiver name     * destinationLastName  - Required. (if destinationFullName is empty). Max 225 characters. Package receiver lastname     * destinationFullName - Required. (if destinationFirstName and destinationLastName are empty). Max 225 characters. Package receiver full name     * destinationCompany - Optional. Max 255 characters Package receiver company name     * destinationEmail - Optional. Max 255. Must be valid email address. Package receiver email     * destinationApartment - Optional. Max 50. Apartment number, floor etc. Where in the building it should be delivered     * destinationAddress - Required. Address of the building (street and building number), where the package will be delivered     * destinationLocality - Optional. Max 50. Destination city. If missing, warehouse city will be used.     * destinationCountry  - Optional. Max 50. Destination country name. If missing, warehouse country will be used.     * destinationPostalCode - Optional. Max 50. Destination postal code     * destinationPhone - Required. Can start with +, can contain numbers from 0-9, has to be 6 to 13 digits long. Package receiver phone number notes Optional Notes for the order/courier     * packageSize Required. Enum [ size20x36x60D10W ,size60x36x60D10W ] Package size that will be delivered     *     * Response     * Response will contain HTTP code and content in JSON format.     * Order successfully validated     * HTTP Code: 200 OK     * JSON     * {     *      "status": true,     * }     *     * Order validation failed     * HTTP Code: 422 Unprocessable Entity     * JSON     * {     * "status": false,     * "errors": {     *      "destinationLastName": {     *          "Code": 001,     *          "Text": "destinationLastName Missing"     *      },     *      "destinationAddress": {     *          " Code": 001,     *          "Text": "destinationAddress Missing"     *      }     * }     * }     * Authentication failed     * HTTP Code: 401 Unauthorized     */        public function getOrderValidation(array $data)    {        $data = array(            'token' => $this->key,            'warehouse' => $this->warehouseCode,            'destinationFirstName' => $data['shippingAddress']['firstname'],            'destinationLastName' => $data['shippingAddress']['lastname'],            'destinationFullName' => '',            'destinationCompany' => $data['shippingAddress']['company'],            'destinationEmail' => $data['shippingAddress']['email'],            'destinationApartment' => '',            'destinationAddress' => $data['shippingAddress']['street'],            'destinationLocality' => $data['shippingAddress']['city'],            'destinationCountry' => $data['shippingAddress']['country_id'],            'destinationPostalCode' => $data['shippingAddress']['postcode'],            'destinationPhone' => $data['shippingAddress']['telephone'],            'notes' => '',            'packageSize' => $data['packageSize']        );        $url = $this->location . '/orders/new/warehouse/validate';        return $this->sendRequest($url, $data);    }    /**     * Validate before placing a new order     * This request is for validating order details, before placing a new delivery order to PostPal     *     * URL:  /orders/new/warehouse     * Type: POST     *     * Parameters:     * token - Required.  Has to ba valid authentication token Authentication token     * warehouse - Required. Warehouse code     * destinationFirstName  - Required. (if destinationFullName is empty). Max 225 characters. Package receiver name     * destinationLastName  - Required. (if destinationFullName is empty). Max 225 characters. Package receiver lastname     * destinationFullName - Required. (if destinationFirstName and destinationLastName are empty). Max 225 characters. Package receiver full name     * destinationCompany - Optional. Max 255 characters Package receiver company name     * destinationEmail - Optional. Max 255. Must be valid email address. Package receiver email     * destinationApartment - Optional. Max 50. Apartment number, floor etc. Where in the building it should be delivered     * destinationAddress - Required. Address of the building (street and building number), where the package will be delivered     * destinationLocality - Optional. Max 50. Destination city. If missing, warehouse city will be used.     * destinationCountry  - Optional. Max 50. Destination country name. If missing, warehouse country will be used.     * destinationPostalCode - Optional. Max 50. Destination postal code     * destinationPhone - Required. Can start with +, can contain numbers from 0-9, has to be 6 to 13 digits long. Package receiver phone number notes Optional Notes for the order/courier     * packageSize Required. Enum [ size20x36x60D10W ,size60x36x60D10W ] Package size that will be delivered     *     * Response     * Response will contain HTTP code and content in JSON format.     * Order successfully validated     * HTTP Code: 200 OK     * JSON     * {     *      "status": true,     *      "trackingCode": "994887674",     *      "trackingURL": "http://test.postpal.ee/track/994887674",     *      "packageLabelPDF": "http://test.postpal.ee/label/pdf/eae336ce1fec0d54d2ff2ac702da31e0"     * }     *     * Order validation failed     * HTTP Code: 422 Unprocessable Entity     * JSON     * {     * "status": false,     * "errors": {     *      "destinationLastName": {     *          "Code": 001,     *          "Text": "destinationLastName Missing"     *      },     *      "destinationAddress": {     *          " Code": 001,     *          "Text": "destinationAddress Missing"     *      }     * }     * }     * Authentication failed     * HTTP Code: 401 Unauthorized     */    public function sendNewOrder(array $data)    {        $data = array(            'token' => $this->key,            'warehouse' => $this->warehouseCode,            'destinationFirstName' => $data['shippingAddress']['firstname'],            'destinationLastName' => $data['shippingAddress']['lastname'],            'destinationFullName' => '',            'destinationCompany' => $data['shippingAddress']['company'],            'destinationEmail' => $data['shippingAddress']['email'],            'destinationApartment' => '',            'destinationAddress' => $data['shippingAddress']['street'],            'destinationLocality' => $data['shippingAddress']['city'],            'destinationCountry' => $data['shippingAddress']['country_id'],            'destinationPostalCode' => $data['shippingAddress']['postcode'],            'destinationPhone' => $data['shippingAddress']['telephone'],            'notes' => '',            'packageSize' => $data['packageSize']        );        $url = $this->location . '/orders/new/warehouse';        return $this->sendRequest($url, $data);    }    private function sendRequest($url, $data)    {        $httpClient = new Varien_Http_Client();        $httpClient->setUri($url);        $httpClient->setMethod('POST');        $httpClient->setHeaders('Content-Type', 'application/json');        $httpClient->setParameterPost($data);        $response = $httpClient->request();        $responseBody = $response->getRawBody();        //Mage::log('PostPal response body:\n ' . print_r($responseBody, true));        return json_decode($responseBody);    }}