<?php/** * @author Jana Vassiljeva <jana@artmarka.com> */class PostPal_Shipping_Model_Carrier extends Mage_Shipping_Model_Carrier_Abstract implements Mage_Shipping_Model_Carrier_Interface{    protected $_code = 'postpal_shipping';    public function collectRates(Mage_Shipping_Model_Rate_Request $request)    {        $result = Mage::getModel('shipping/rate_result');        /* @var $result Mage_Shipping_Model_Rate_Result */        if(!$this->_isAvailable($request))            return $result;        if(!$this->_isAddressAvailable($request))            return $result;        $result->append($this->_getStandardShippingRate());        return $result;    }    public function isTrackingAvailable()    {        return true;    }    protected function _isAddressAvailable($request)    {        $shipping = Mage::getSingleton('checkout/session')->getQuote()->getShippingAddress();        if(empty($shipping))            return true;        $data = array(            'shippingAddress' => array(                'firstname' => $shipping->getFirstname(),                'lastname' => $shipping->getLastname(),                'company' => '',                'email' => '',                'street' => $request->getDestStreet(),                'city' => $request->getDestCity(),                'country_id' => $request->getDestCountryId(),                'postcode' => $request->getDestPostcode(),                'telephone' => $shipping->getTelephone(),            ),            'packageSize' => 'size20x36x60D10W'        );        $result = Mage::getModel('postpal_shipping/api')->getOrderValidation($data);        if (!empty($result) && $result->status == 'true')            return true;        return false;    }    protected function _getStandardShippingRate()    {        $rate = Mage::getModel('shipping/rate_result_method');        /* @var $rate Mage_Shipping_Model_Rate_Result_Method */        $rate->setCarrier($this->_code);        /**         * getConfigData(config_key) returns the configuration value for the         * carriers/[carrier_code]/[config_key]         */        $rate->setCarrierTitle($this->getConfigData('title'));        $rate->setMethod('fixed');        $result = Mage::getModel('postpal_shipping/api')->getDeliveryArrivalEstimation();        if (empty($result) || $result->status == false)            return false;        $formatedTime = date('d.m.Y H:i', strtotime($result->estimate));        $rate->setMethodTitle($this->getConfigData('name'). ' ('. Mage::helper('postpal')->__('ETA: '). ' ' . $formatedTime . ') ');        $rate->setPrice($this->getConfigData('default_price'));        $rate->setCost(0);        return $rate;    }    protected function _isAvailable(Mage_Shipping_Model_Rate_Request $request) {        $productItem = true;        if ($request->getAllItems()) {            foreach ($request->getAllItems() as $item) {                $custom = Mage::getModel('catalog/product')->load($item->getProduct()->getId());                $notAvailableByPostPal = $custom->getData('nopostpal'); // Product attribute nopostpal                if ($notAvailableByPostPal) {                    $productItem = false;                    break;                }            }        }        if (!$productItem)            return false;        return true;    }    public function getAllowedMethods() {        return array();    }}